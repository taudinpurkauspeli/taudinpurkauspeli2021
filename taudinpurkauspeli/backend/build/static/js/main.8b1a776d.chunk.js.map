{"version":3,"sources":["i18n/config.js","components/CaseCard.js","components/Frontpage.js","components/GuestFrontpage.js","components/Sidebar.js","components/HowToPlay.js","components/Profile.js","components/Case.js","services/cases.js","components/NewCase.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["i18n","use","LanguageDetector","init","initReactI18next","fallbackLng","lng","localStorage","getItem","resources","fi","translations","require","en","ns","defaultNS","languages","CaseCard","c","admin","t","useTranslation","Card","as","Link","to","id","style","width","cursor","className","Body","Title","title","Text","anamnesis","Button","size","variant","Footer","ProgressBar","now","label","Frontpage","cases","Row","xs","md","filter","hidden","map","Col","GuestFrontpage","Sidebar","HowToPlay","Profile","Case","useParams","find","a","Number","baseUrl","axios","get","then","response","data","newObject","post","newCase","addCaseFunc","useState","newTitle","setNewTitle","newAnamnesis","setNewAnamnesis","newHidden","setNewHidden","onSubmit","event","preventDefault","caseObject","service","htmlFor","type","value","onChange","target","onClick","Navigationbar","user","guest","changeUser","changeAdmin","changeGuest","setCases","React","useEffect","initialCases","catch","error","console","log","changeLanguage","language","Navbar","collapseOnSelect","expand","Brand","Toggle","Collapse","Nav","NavDropdown","Item","eventKey","NavLink","path","NewCase","App","setUser","setAdmin","setGuest","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b1a776d.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n.use(LanguageDetector).init();\n\ni18n.use(initReactI18next).init({\n  fallbackLng: 'fi',\n\n  // eslint-disable-next-line no-undef\n  lng: localStorage.getItem('i18nextLng') || 'fi',\n  resources: {\n    fi: {\n      // eslint-disable-next-line global-require\n      translations: require('./locales/fi/translations.json'),\n    },\n    en: {\n      // eslint-disable-next-line global-require\n      translations: require('./locales/en/translations.json'),\n    },\n  },\n  ns: ['translations'],\n  defaultNS: 'translations',\n});\n\ni18n.languages = ['fi', 'en'];\n\nexport default i18n;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Card,\n  Button,\n  ProgressBar,\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst CaseCard = ({ c, admin }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Card as={Link} to={`/cases/${c.id}`} style={{ width: '20rem', cursor: 'pointer' }} className=\"caseCard\">\n      <Card.Body>\n        <Card.Title>{c.title}</Card.Title>\n        <Card.Text>{c.anamnesis}</Card.Text>\n        { admin && (\n          <div>\n            <Button className=\"copyButton\" size=\"sm\">{t('copy')}</Button>\n            {' '}\n            <Button className=\"removeButton\" size=\"sm\" variant=\"danger\">{t('button_remove')}</Button>\n          </div>\n        )}\n      </Card.Body>\n      <Card.Footer>\n        <ProgressBar className=\"progsbar\" variant=\"success\" now={25} label={`${25}%`} />\n      </Card.Footer>\n    </Card>\n  );\n};\n\nexport default CaseCard;\n","/* eslint-disable array-callback-return */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Col,\n  Row,\n  Button,\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport CaseCard from './CaseCard';\n\nconst Frontpage = ({ cases, admin }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('frontpage_title')}</h2>\n      <p>{t('frontpage_text')}</p>\n      {admin && (\n        <div>\n          <Button as={Link} to=\"/newcase\">{t('button_newCase')}</Button>\n          <br />\n          <h3>{t('case_hidden')}</h3>\n          <hr />\n        </div>\n      )}\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\n        {admin && (\n          cases.filter((c) => c.hidden).map((c) => (\n            <Col key={c.id}>\n              <CaseCard c={c} admin={admin} />\n            </Col>\n          ))\n        )}\n      </Row>\n      <br />\n      <h3>{t('case_playable')}</h3>\n      <hr />\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\n        {cases.filter((c) => !c.hidden).map((c) => (\n          <Col key={c.id}>\n            <CaseCard c={c} admin={admin} />\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\nexport default Frontpage;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst GuestFrontpage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('GuestFrontpageTitle')}</h2>\n      <p>{t('GuestFrontpageText')}</p>\n    </div>\n  );\n};\nexport default GuestFrontpage;\n","import React from 'react';\n\nconst Sidebar = () => (\n  <div id=\"sidebar\" />\n);\n\nexport default Sidebar;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst HowToPlay = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('howToPlay')}</h2>\n      <p>{t('gameInstructions')}</p>\n    </div>\n  );\n};\n\nexport default HowToPlay;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst Profile = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('userProfile')}</h2>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Case = ({ cases }) => {\n  const { id } = useParams();\n  const c = cases.find((a) => a.id === Number(id));\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{c.title}</h2>\n      <p>{c.anamnesis}</p>\n    </div>\n  );\n};\n\nexport default Case;\n","import axios from 'axios';\n\nconst baseUrl = '/api/cases';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport service from '../services/cases';\n\nconst newCase = ({ addCaseFunc }) => {\n  const { t } = useTranslation();\n  const [newTitle, setNewTitle] = useState('');\n  const [newAnamnesis, setNewAnamnesis] = useState('');\n  const [newHidden, setNewHidden] = useState(false);\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value);\n  };\n\n  const handleAnamnesisChange = (event) => {\n    setNewAnamnesis(event.target.value);\n  };\n\n  const handleHiddenChange = (event) => {\n    setNewHidden(event.target.value);\n  };\n\n  const addCase = (event) => {\n    event.preventDefault();\n    // eslint-disable-next-line no-param-reassign\n    const caseObject = ({\n      title: newTitle,\n      anamnesis: newAnamnesis,\n      hidden: newHidden,\n    });\n\n    if (addCaseFunc != null) {\n      addCaseFunc(caseObject);\n    }\n    service.create(caseObject)\n      .then(() => {\n        setNewTitle('');\n        setNewAnamnesis('');\n        setNewHidden(false);\n      });\n  };\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('addCase')}</h2>\n\n      <form onSubmit={addCase}>\n        <p>\n          <label htmlFor=\"title\">\n            {t('caseTitle')}\n          </label>\n          <br />\n          <input\n            id=\"title\"\n            type=\"text\"\n            value={newTitle}\n            onChange={handleTitleChange}\n          />\n        </p>\n        <p>\n          <label htmlFor=\"anamnesis\">{t('caseAnamnesis')}</label>\n          <br />\n          <textarea\n            id=\"anamnesis\"\n            type=\"textarea\"\n            value={newAnamnesis}\n            onChange={handleAnamnesisChange}\n          />\n        </p>\n        <p>\n          <label htmlFor=\"hidden\">{t('hideCase')}</label>\n          <br />\n          <input\n            id=\"hidden\"\n            value={newHidden}\n            type=\"checkbox\"\n            onClick={handleHiddenChange}\n          />\n        </p>\n        <p>\n          <input type=\"submit\" id=\"submit\" value={t('button_submitNewCase')} />\n        </p>\n      </form>\n\n    </div>\n  );\n};\n\nexport default newCase;\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link,\n} from 'react-router-dom';\nimport {\n  Navbar,\n  Nav,\n  NavLink,\n  NavDropdown,\n} from 'react-bootstrap';\n\n// Import translations\nimport { useTranslation } from 'react-i18next';\nimport i18n from '../i18n/config';\n\n// Import components\nimport Frontpage from './Frontpage';\nimport GuestFrontpage from './GuestFrontpage';\nimport Sidebar from './Sidebar';\nimport HowToPlay from './HowToPlay';\nimport Profile from './Profile';\nimport Case from './Case';\nimport service from '../services/cases';\nimport NewCase from './NewCase';\n\nconst Navigationbar = ({\n  user, admin, guest, changeUser, changeAdmin, changeGuest,\n}) => {\n  const { t } = useTranslation();\n  const [cases, setCases] = useState([]);\n\n  React.useEffect(() => {\n    service\n      .getAll()\n      .then((initialCases) => {\n        setCases(initialCases);\n      })\n      .catch((error) => {\n        // eslint-disable-next-line\n        console.log(error);\n      });\n  }, []);\n\n  const changeLanguage = (language) => {\n    i18n.changeLanguage(language);\n  };\n\n  return (\n    <Router>\n      <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\">\n        <Navbar.Brand as={Link} to=\"/\">{t('nameOfTheGame')}</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <NavDropdown title={t('selectUser')}>\n              <NavDropdown.Item onClick={() => changeGuest()} eventKey=\"guest\">{t('guest')}</NavDropdown.Item>\n              <NavDropdown.Item onClick={() => changeUser()} eventKey=\"student\">{t('student')}</NavDropdown.Item>\n              <NavDropdown.Item onClick={() => changeAdmin()} eventKey=\"teacher\">{t('teacher')}</NavDropdown.Item>\n            </NavDropdown>\n            <NavDropdown title={t('selectLanguage')}>\n              <NavDropdown.Item onClick={() => changeLanguage('fi')} eventKey=\"fi\">{t('language_finnish')}</NavDropdown.Item>\n              <NavDropdown.Item onClick={() => changeLanguage('en')} eventKey=\"en\">{t('language_english')}</NavDropdown.Item>\n            </NavDropdown>\n            { admin && (\n            <Nav.Item>\n              <NavLink as={Link} to=\"/users\">{t('userInformation')}</NavLink>\n            </Nav.Item>\n            )}\n            { admin && (\n            <Nav.Item>\n              <NavLink as={Link} to=\"/files\">{t('fileBank')}</NavLink>\n            </Nav.Item>\n            )}\n            { (user || guest || admin) && (\n            <Nav.Item>\n              <NavLink as={Link} to=\"/howtoplay\">{t('howToPlay')}</NavLink>\n            </Nav.Item>\n            )}\n            { user && (\n            <Nav.Item>\n              <NavLink as={Link} to=\"/profile\">{t('userProfile')}</NavLink>\n            </Nav.Item>\n            )}\n            <Nav.Item>\n              { (user || admin)\n                ? <NavLink as={Link} to=\"/logout\">{t('logOut')}</NavLink>\n                : <NavLink as={Link} to=\"/login\">{t('logIn')}</NavLink> }\n            </Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      { guest\n        ? ' '\n        : <Sidebar /> }\n\n      <Switch>\n        <Route path=\"/howtoplay\">\n          <HowToPlay />\n        </Route>\n        <Route path=\"/profile\">\n          <Profile />\n        </Route>\n        <Route path=\"/cases/:id\">\n          <Case cases={cases} />\n        </Route>\n        { admin && (\n        <Route path=\"/newcase\">\n          <NewCase />\n        </Route>\n        )}\n\n        <Route path=\"/\">\n          { guest\n            ? <GuestFrontpage />\n            : <Frontpage admin={admin} cases={cases} /> }\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Navigationbar;\n","import React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Navigationbar from './components/Navbar';\n\nconst App = () => {\n  const [user, setUser] = useState(false);\n  const [admin, setAdmin] = useState(false);\n  const [guest, setGuest] = useState(true);\n\n  const changeUser = () => {\n    setUser(true);\n    setGuest(false);\n    setAdmin(false);\n  };\n\n  const changeGuest = () => {\n    setUser(false);\n    setGuest(true);\n    setAdmin(false);\n  };\n\n  const changeAdmin = () => {\n    setUser(false);\n    setGuest(false);\n    setAdmin(true);\n  };\n\n  return (\n    <Navigationbar\n      user={user}\n      admin={admin}\n      guest={guest}\n      changeUser={changeUser}\n      changeAdmin={changeAdmin}\n      changeGuest={changeGuest}\n    />\n  );\n};\n\nexport default (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' // [::1] is the IPv6 localhost address.\n      || window.location.hostname === '[::1]'\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n      ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              // eslint-disable-next-line no-lonely-if\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n          || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n/config';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}