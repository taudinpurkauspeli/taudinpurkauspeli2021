{"version":3,"sources":["utils/Helper.js","App/case/casesService.js","utils/MessageBanner.js","App/case/casesReducer.js","i18n/config.js","App/navigation/Navbar.js","App/navigation/Sidebar.js","App/case/components/NewCaseForm.js","App/differential/services/differentialsUnderCasesService.js","App/procedure/services/proceduresUnderCaseService.js","App/differential/services/differentialGroupsUnderCasesService.js","App/case/components/CopyCase.js","App/case/components/CaseCard.js","App/frontpage/Search.js","utils/AddUpdateModal.js","App/frontpage/Frontpage.js","App/instructions/HowToPlay.js","App/users/Profile.js","App/users/Users.js","App/procedure/components/NewProcedureForm.js","App/procedure/reducers/proceduresUnderCasesReducer.js","App/procedure/services/proceduresService.js","App/procedure/reducers/proceduresReducer.js","App/procedure/components/EditProcedure.js","App/procedure/components/ProcedureList.js","App/procedure/components/Procedures.js","App/differential/reducers/differentialsUnderCasesReducer.js","App/differential/components/UpdateDifferentialForm.js","App/differential/components/Differential.js","App/differential/components/DifferentialList.js","utils/CustomTypeaheadSelect.js","App/differential/components/AddDifferentialForm.js","App/differential/services/differentialsService.js","App/differential/reducers/differentialsReducer.js","App/differential/components/differentialGroup/DifferentialGroup.js","App/differential/components/differentialGroup/DifferentialGroupList.js","App/differential/components/differentialGroup/AddDifferentialGroupForm.js","App/differential/services/differentialGroupsService.js","App/differential/reducers/differentialGroupsUnderCasesReducer.js","App/differential/reducers/differentialGroupsReducer.js","App/differential/components/Differentials.js","App/case/components/HideCase.js","App/case/components/UpdateCaseTitle.js","App/anamnesis/UpdateAnamnesis.js","App/anamnesis/Anamnesis.js","App/subprocedure/services/subProceduresService.js","App/subprocedure/reducers/subProceduresReducer.js","App/subprocedure/services/optionGroupsService.js","App/subprocedure/services/optionGroupsUnderSubProceduresService.js","App/subprocedure/reducers/optionGroupsUnderSubProceduresReducer.js","App/subprocedure/reducers/optionGroupsReducer.js","App/subprocedure/services/optionsService.js","App/subprocedure/services/optionsUnderSubProceduresService.js","App/subprocedure/reducers/optionsUnderSubProceduresReducer.js","App/subprocedure/reducers/optionReducer.js","App/case/components/Case.js","App/subprocedure/components/option/optionGroup/AddOptionGroupForm.js","App/subprocedure/components/option/Option.js","App/subprocedure/components/option/OptionList.js","App/subprocedure/components/option/AddOptionForm.js","App/subprocedure/components/option/optionGroup/OptionGroup.js","App/subprocedure/components/option/optionGroup/OptionGroupList.js","App/subprocedure/components/interviewSubProcedure/InterviewSubProcedure.js","App/subprocedure/components/textSubProcedure/UpdateTextSubProcedureForm.js","App/subprocedure/components/textSubProcedure/TextSubProcedure.js","App/subprocedure/components/conclusionSubProcedure/ConclusionSubProcedure.js","App/subprocedure/components/SubProcedure.js","App/subprocedure/components/SubProcedureList.js","App/subprocedure/components/textSubProcedure/AddTextSubProcedure.js","App/subprocedure/components/interviewSubProcedure/AddInterviewSubProcedure.js","App/subprocedure/components/conclusionSubProcedure/AddConclusionSubProcedureForm.js","App/procedure/components/Procedure.js","App/files/FileBank.js","App/files/filesService.js","App/files/PrivacyNotice.js","App/navigation/Routing.js","App/navigation/Footer.js","App.js","App/users/reducers/userReducer.js","store.js","serviceWorker.js","index.js"],"names":["token","getConfig","headers","Authorization","getLanguage","localStorage","getItem","validateName","t","useTranslation","Yup","min","max","required","validatePriority","typeError","positive","integer","baseUrl","axios","get","then","response","data","newObject","post","put","id","delete","setError","message","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setSuccess","success","MessageBanner","newestOnTop","rtl","pauseOnFocusLoss","casesReducer","state","action","type","filter","c","map","i18n","use","LanguageDetector","init","initReactI18next","fallbackLng","lng","resources","fi","translations","require","en","ns","defaultNS","languages","Navigationbar","admin","useSelector","changeLanguage","language","window","location","reload","Navbar","collapseOnSelect","expand","variant","sticky","Brand","as","Link","to","Toggle","Collapse","Nav","className","NavDropdown","title","Item","onClick","eventKey","NavLink","href","Sidebar","newCaseForm","addCase","formik","useFormik","initialValues","anamnesis","hidden","validationSchema","onSubmit","values","Form","noValidate","handleSubmit","spellCheck","Group","controlId","Label","Control","getFieldProps","isInvalid","errors","Feedback","rows","Check","label","Button","diffGroupCaseId","differentialId","caseId","copyCase","caseToBeCopied","createProcedures","oldCaseId","newCopyId","size","event","preventDefault","caseObject","caseService","copy","ducGroupService","res","newCaseId","result","duckling","forEach","element","differentialGroupId","ducService","result2","element2","did","plaa","description","copyTheDamnThing","pucService","CaseCard","dispatch","useDispatch","Card","style","width","cursor","Body","Title","Text","Footer","ProgressBar","now","CopyCase","createDifferentials","copyId","i","length","procedureId","priority","successMessage","errorMessage","confirm","a","casesService","Search","newSearch","searchCases","htmlFor","value","onChange","AddUpdateModal","forwardRef","props","ref","useState","show","setShow","toggleVisibility","useImperativeHandle","disabled","buttonLabel","Modal","onHide","backdrop","keyboard","Header","closeButton","titleLabel","children","Frontpage","setNewSearch","modalRef","useRef","cases","casesToShow","toLowerCase","includes","target","NewCaseForm","newCase","content","current","Row","xs","md","Col","HowToPlay","Profile","Users","newProcedureForm","addProcedure","name","getProceduresUnderCase","proceduresUnderCasesService","proceduresUnderCase","createProcedureUnderCase","newProcedureUnderCase","updateProcedurePriority","procedure","procedureCaseId","proceduresReducer","p","EditProcedure","editProcedureFunc","setNewPriority","setNewProcedureTitle","useHistory","editProcedure","procedureToBeUpdated","Number","proceduresService","updateProcedure","margin","e","defaultValue","DragNDropList","proceduresHook","handleDragStart","handleDragEnd","handleDragEnter","submitForm","handleProcedureRemove","index","onDragStart","onDragEnd","onDragEnter","ProcedureList","draggingItem","dragOverItem","setProceduresHook","procedureToEdit","setProcedureToEdit","initialProcedures","sort","b","useEffect","procedures","Promise","all","listCopy","draggingItemContent","splice","handleEditId","removeProcedureUnderCase","Procedures","useParams","NewProcedureForm","procedureObject","newProcedure","createDifferentialUnderCase","differentialsUnderCasesService","newDifferentialUnderCase","differentialsUnderCasesReducer","UpdateDifferentialForm","updateDifferential","shape","placeholder","Differential","d","handleDifferentialRemove","removeDifferentialUnderCase","Accordion","updatedDifferential","DifferentialList","diffGroupDiffs","differentialsUnderCase","CustomTypeaheadSelect","useField","meta","helper","multiple","selected","setValue","onInputChange","text","onBlur","setTouched","allowNew","labelKey","options","emptyLabel","touched","AddDifferentialForm","addDifferential","differentials","differential","r","differentialsReducer","DifferentialGroup","differentialObject","differentialsService","newDifferential","createDifferential","DifferentialGroupList","caseDifferentialGroups","differentialGroupsUnderCase","AddDifferentialGroupForm","addDifferentialGroup","differentialGroups","group","createDifferentialGroupUnderCase","differentialGroupsUnderCasesService","newDifferentialGroupUnderCase","differentialGroupsUnderCasesReducer","differentialGroupsReducer","Differentials","differentialGroupObject","differentialGroup","differentialGroupsService","newDifferentialGroup","HideCase","hideCase","newHidden","setNewHidden","UpdateCaseTitle","updateCaseTitle","role","UpdateAnamnesis","updateAnamnesis","Anamnesis","find","handleCaseUpdate","updatedCase","subProceduresReducer","createOptionGroupUnderSubProcedure","service","newOptionGroupUnderSubProcedure","optionGroupsUnderSubProceduresReducer","optionGroupsReducer","createOptionUnderSubProcedure","newOption","optionsUnderSubProceduresReducer","optionsReducer","Case","subProceduresService","subprocedures","optionGroupsService","returnedOptionGroups","getOptionGroupsUnderSubProcedures","returnedOptions","getOptionsUnderSubProcedures","returnedDifferentials","returnedDifferentialsUnderCase","getDifferentialsUnderCase","returnedDifferentialGroups","returnedDifferentialGroupsUnderCase","getDifferentialGroupsUnderCase","ButtonGroup","marginBottom","path","NewOptionGroupForm","addOptionGroup","optionGroups","Option","optionObject","isRequired","OptionList","optionGroupSubProcedureId","optionsUnderSubProcedure","o","AddOptionForm","addOption","option","defaultChecked","OptionGroup","optionId","createOption","OptionGroupList","subProcedureId","subProcedureOptionGroups","optionGroupsUnderSubProcedure","InterviewSubProcedure","AddOptionGroupForm","optionGroup","newOptionGroup","optionGroupId","createOptionGroup","UpdateTextSubProcedureForm","updateTextSubProcedure","TextSubProcedure","updatedObject","subProcedureObject","ConclusionSubProcedure","SubProcedure","SubProcedureList","listedProcedures","AddTextSubProcedure","addSubProcedure","AddInterviewSubProcedure","AddConclusionSubProcedureForm","caseDifferentials","Procedure","caseSubProcedures","subProcedures","showWhenVisible","display","handleSubProcedureAdd","newSubProcedure","addedSubprocedure","some","FileBank","config","responseType","PrivacyNotice","pdf","setPdf","numPages","setNumPages","pageNumber","setPageNumber","filesService","fetchedPdf","changePage","offset","prevPageNumber","file","onLoadSuccess","Routing","color","App","React","user","newToken","userReducer","persistConfig","key","storage","reducer","combineReducers","proceduresUnderCasesReducer","persistedReducer","persistReducer","Boolean","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.632e838a.chunk.js","sourcesContent":["import * as Yup from 'yup';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nlet token = null;\r\n\r\nexport const setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nexport const getConfig = () => ({ headers: { Authorization: token } });\r\n\r\nexport const getLanguage = () => (localStorage.getItem('i18nextLng') || 'fi');\r\n\r\nexport const validateName = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired'))\r\n  );\r\n};\r\n\r\nexport const validatePriority = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    Yup.number()\r\n      .typeError(t('warningPositiveInteger'))\r\n      .required(t('warningRequired'))\r\n      .positive(t('warningPositiveInteger'))\r\n      .integer(t('warningPositiveInteger'))\r\n  );\r\n};\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../utils/Helper';\r\n\r\nconst baseUrl = '/api/cases';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (newObject) => axios.put(`${baseUrl}/${newObject.id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","/* istanbul ignore file */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst MessageBanner = () => (\r\n  <ToastContainer\r\n    position=\"top-center\"\r\n    autoClose={3000}\r\n    hideProgressBar\r\n    newestOnTop={false}\r\n    closeOnClick\r\n    rtl={false}\r\n    pauseOnFocusLoss={false}\r\n    draggable={false}\r\n    pauseOnHover\r\n  />\r\n);\r\n\r\nexport const setError = (message) => {\r\n  toast.error(message, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: false,\r\n    draggable: false,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\nexport const setSuccess = (message) => {\r\n  toast.success(message, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: false,\r\n    draggable: false,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\nexport default MessageBanner;\r\n","import casesService from './casesService';\r\nimport { setToken } from '../../utils/Helper';\r\nimport { setError, setSuccess } from '../../utils/MessageBanner';\r\n\r\nconst casesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'INITIALIZE_CASES':\r\n      return action.data;\r\n    case 'NEW_CASE':\r\n      return [...state, action.data];\r\n    case 'REMOVE_CASE':\r\n      return state.filter((c) => c.id !== action.data);\r\n    case 'UPDATE_CASE':\r\n      return state.map((c) => (c.id !== action.data.id\r\n        ? c\r\n        : action.data));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializeCasesAndUser = () => async (dispatch) => {\r\n  const { data, user } = await casesService.getAll();\r\n  dispatch({\r\n    type: 'INITIALIZE_CASES',\r\n    data,\r\n  });\r\n\r\n  setToken(user.token);\r\n  dispatch({\r\n    type: 'INITIALIZE_USER',\r\n    data: user.admin,\r\n  });\r\n};\r\n\r\nexport const createCase = (content, successMessage, errorMessage) => async (dispatch) => {\r\n  try {\r\n    const newCase = await casesService.create(content);\r\n\r\n    dispatch({\r\n      type: 'NEW_CASE',\r\n      data: newCase,\r\n    });\r\n\r\n    setSuccess(successMessage);\r\n  } catch (error) {\r\n    setError(errorMessage);\r\n  }\r\n};\r\n\r\nexport const removeCase = (id, successMessage, errorMessage) => async (dispatch) => {\r\n  try {\r\n    await casesService.remove(id);\r\n\r\n    dispatch({\r\n      type: 'REMOVE_CASE',\r\n      data: id,\r\n    });\r\n\r\n    setSuccess(successMessage);\r\n  } catch (error) {\r\n    setError(errorMessage);\r\n  }\r\n};\r\n\r\nexport const updateCase = (content, successMessage, errorMessage) => async (dispatch) => {\r\n  try {\r\n    await casesService.update(content);\r\n\r\n    dispatch({\r\n      type: 'UPDATE_CASE',\r\n      data: content,\r\n    });\r\n\r\n    setSuccess(successMessage);\r\n  } catch (error) {\r\n    setError(errorMessage);\r\n  }\r\n};\r\n\r\nexport default casesReducer;\r\n","/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\n/* eslint-disable linebreak-style */\r\nimport i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\ni18n.use(LanguageDetector).init();\r\n\r\ni18n.use(initReactI18next).init({\r\n  fallbackLng: 'fi',\r\n\r\n  // eslint-disable-next-line no-undef\r\n  lng: localStorage.getItem('i18nextLng') || 'fi',\r\n  resources: {\r\n    fi: {\r\n      // eslint-disable-next-line global-require\r\n      translations: require('./locales/fi/translations.json'),\r\n    },\r\n    en: {\r\n      // eslint-disable-next-line global-require\r\n      translations: require('./locales/en/translations.json'),\r\n    },\r\n  },\r\n  ns: ['translations'],\r\n  defaultNS: 'translations',\r\n});\r\n\r\ni18n.languages = ['fi', 'en'];\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavLink,\r\n  NavDropdown,\r\n} from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// Import translations\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18n from '../../i18n/config';\r\n\r\nconst Navigationbar = () => {\r\n  const admin = useSelector((state) => state.admin);\r\n  const { t } = useTranslation();\r\n\r\n  /* istanbul ignore next */\r\n  const changeLanguage = (language) => {\r\n    i18n.changeLanguage(language);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" sticky=\"top\">\r\n      <Navbar.Brand as={Link} to=\"/\">{t('nameOfTheGame')}</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <NavDropdown title={t('selectLanguage')} id=\"selectLanguage\" className=\"navItems\">\r\n            <NavDropdown.Item onClick={() => changeLanguage('fi')} eventKey=\"fi\">{t('languageFinnish')}</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={() => changeLanguage('en')} eventKey=\"en\">{t('languageEnglish')}</NavDropdown.Item>\r\n          </NavDropdown>\r\n          { admin && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/users\" className=\"navItems\">{t('userInformation')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          { admin && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/files\" className=\"navItems\">{t('fileBank')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/howtoplay\" className=\"navItems\">{t('howToPlay')}</NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/profile\" className=\"navItems\">{t('userProfile')}</NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink href=\"https://taudinpurkauspeli-taudinpurkauspeli2021.apps.ocp-prod-0.k8s.it.helsinki.fi/Shibboleth.sso/Logout\" className=\"navItems\">{t('logOut')}</NavLink>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigationbar;\r\n","import React from 'react';\r\n\r\nconst Sidebar = () => (\r\n  <div id=\"sidebar\" />\r\n);\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { validateName } from '../../../utils/Helper';\r\n\r\nconst newCaseForm = ({ addCase }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n      anamnesis: '',\r\n      hidden: false,\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: validateName(),\r\n      anamnesis: Yup.string(),\r\n      hidden: Yup.bool(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      addCase({\r\n        title: values.title,\r\n        anamnesis: values.anamnesis,\r\n        hidden: values.hidden,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit} spellCheck=\"false\">\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('caseTitle')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"anamnesis\">\r\n        <Form.Label>{t('caseAnamnesis')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={3}\r\n          {...formik.getFieldProps('anamnesis')}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"hidden\">\r\n        <Form.Check\r\n          label={t('hideCase')}\r\n          {...formik.getFieldProps('hidden')}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewCase')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default newCaseForm;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentialsUnderCases';\r\n\r\nconst getAll = (diffGroupCaseId) => {\r\n  const request = axios.get(`${baseUrl}/${diffGroupCaseId}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nconst remove = (diffGroupCaseId, differentialId) => axios.delete(`${baseUrl}/${diffGroupCaseId}/${differentialId}`, getConfig());\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/proceduresUnderCases';\r\n\r\nconst getAll = (caseId) => {\r\n  const request = axios.get(`${baseUrl}/${caseId}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\r\n\r\nconst remove = (id) => axios.delete(`${baseUrl}/${id}`, getConfig());\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentialGroupsUnderCases';\r\n\r\nconst getAll = (caseId) => {\r\n  const request = axios.get(`${baseUrl}/${caseId}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import { Button } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport caseService from '../casesService';\r\nimport ducService from '../../differential/services/differentialsUnderCasesService';\r\nimport pucService from '../../procedure/services/proceduresUnderCaseService';\r\n\r\n// Caseen liitetyt diffiryhmät\r\nimport ducGroupService from '../../differential/services/differentialGroupsUnderCasesService';\r\n\r\nconst copyCase = ({\r\n  caseToBeCopied, createProcedures,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const oldCaseId = caseToBeCopied.id;\r\n  let newCopyId = 0;\r\n\r\n  /* istanbul ignore next */\r\n  const copyTheDamnThing = (newCaseId, result) => {\r\n    let duckling = {};\r\n    result.forEach((element) => {\r\n      duckling = {\r\n        caseId: newCaseId,\r\n        differentialGroupId: element.id,\r\n      };\r\n      ducGroupService.create(duckling).then((res) => {\r\n        ducService.getAll(element.diffGroupCaseId)\r\n          .then((result2) => {\r\n            result2.forEach((element2) => {\r\n              const did = element2.id;\r\n              const plaa = {\r\n                diffGroupCaseId: res.id,\r\n                differentialId: did,\r\n                description: element2.description,\r\n              };\r\n              ducService.create(plaa);\r\n            });\r\n          });\r\n      });\r\n    });\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleCopy = (event) => {\r\n    event.preventDefault();\r\n    const caseObject = ({\r\n      title: caseToBeCopied.title,\r\n      anamnesis: caseToBeCopied.anamnesis,\r\n      hidden: caseToBeCopied.hidden,\r\n    });\r\n    caseService.create(caseObject)\r\n      .then((copy) => {\r\n        newCopyId = copy.id;\r\n      })\r\n      .then(() => {\r\n        ducGroupService.getAll(oldCaseId)\r\n          .then((res) => {\r\n            copyTheDamnThing(newCopyId, res);\r\n          });\r\n      })\r\n      .then(() => {\r\n        pucService.getAll(oldCaseId)\r\n          .then((res) => {\r\n            createProcedures(newCopyId, res);\r\n          });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Button variant=\"warning\" size=\"sm\" onClick={handleCopy}>{t('copy')}</Button>\r\n  );\r\n};\r\n\r\nexport default copyCase;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Card,\r\n  Button,\r\n  ProgressBar,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport CopyCase from './CopyCase';\r\nimport ducService from '../../differential/services/differentialsUnderCasesService';\r\nimport pucService from '../../procedure/services/proceduresUnderCaseService';\r\nimport { removeCase } from '../casesReducer';\r\n\r\nconst CaseCard = ({ c, admin }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  /* istanbul ignore next */\r\n  const createDifferentials = (copyId, result) => {\r\n    for (let i = 0; i < result.length; i += 1) {\r\n      const { id, description } = result[i];\r\n      const object = {\r\n        caseId: copyId,\r\n        differentialId: id,\r\n        description,\r\n      };\r\n      ducService.create(object);\r\n    }\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const createProcedures = (copyId, result) => {\r\n    for (let i = 0; i < result.length; i += 1) {\r\n      const { procedureId, priority } = result[i];\r\n      const object = {\r\n        caseId: copyId,\r\n        procedureId,\r\n        priority,\r\n      };\r\n      pucService.create(object);\r\n    }\r\n  };\r\n\r\n  /* istanbull ignore next */\r\n  const handleCaseRemove = () => {\r\n    // eslint-disable-next-line no-alert\r\n    const confirmBox = window.confirm(t('deleteCaseConfirmation'));\r\n    if (confirmBox === true) {\r\n      dispatch(removeCase(c.id, t('deleteCaseSuccess'), t('deleteCaseError')));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card as={Link} to={`/cases/${c.id}`} style={{ width: '20rem', cursor: 'pointer' }} className=\"caseCard\">\r\n        <Card.Body>\r\n          <Card.Title>{c.title}</Card.Title>\r\n          <Card.Text>{c.anamnesis}</Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <ProgressBar className=\"progsbar\" variant=\"success\" now={25} label={`${25}%`} />\r\n        </Card.Footer>\r\n      </Card>\r\n\r\n      { admin && (\r\n        <div className=\"cardButtons\">\r\n          <Button className=\"editButton\" as={Link} to={`/cases/${c.id}`} size=\"sm\">{t('buttonEdit')}</Button>\r\n          <CopyCase\r\n            caseToBeCopied={c}\r\n            createDifferentials={createDifferentials}\r\n            createProcedures={createProcedures}\r\n          />\r\n          <Button className=\"removeButton\" size=\"sm\" variant=\"danger\" onClick={handleCaseRemove}>{t('buttonRemove')}</Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaseCard;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Search = ({ newSearch, searchCases }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"search\">\r\n        {t('searchByTitle')}\r\n        &nbsp;\r\n        <input\r\n          id=\"search\"\r\n          value={newSearch}\r\n          onChange={searchCases}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState, useImperativeHandle, forwardRef } from 'react';\r\nimport {\r\n  Button, Modal,\r\n} from 'react-bootstrap';\r\n\r\nconst AddUpdateModal = forwardRef((props, ref) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    toggleVisibility,\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <Button disabled={props.disabled} className={props.className ? props.className : 'addButton text'} onClick={toggleVisibility} size=\"sm\">\r\n        {props.buttonLabel}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.titleLabel}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {props.children}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default AddUpdateModal;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Col,\r\n  Row,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { createCase } from '../case/casesReducer';\r\n\r\nimport NewCaseForm from '../case/components/NewCaseForm';\r\nimport CaseCard from '../case/components/CaseCard';\r\nimport Search from './Search';\r\nimport AddUpdateModal from '../../utils/AddUpdateModal';\r\n\r\nconst Frontpage = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const [newSearch, setNewSearch] = useState('');\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n  const cases = useSelector((state) => state.cases);\r\n\r\n  /* istanbul ignore next */\r\n  const handleCaseAdd = (newCase) => {\r\n    modalRef.current.toggleVisibility();\r\n    dispatch(createCase(newCase, t('caseAddSuccess'), t('caseAddError')));\r\n  };\r\n\r\n  const searchCases = (event) => {\r\n    setNewSearch(event.target.value);\r\n  };\r\n\r\n  const casesToShow = !newSearch\r\n    ? cases : cases.filter((c) => c.title.toLowerCase().includes(newSearch.toLowerCase()));\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('frontpageTitle')}</h2>\r\n      <p>{t('frontpageText')}</p>\r\n      <Search newSearch={newSearch} searchCases={searchCases} />\r\n      <br />\r\n      {admin && (\r\n        <div>\r\n          <AddUpdateModal buttonLabel={t('buttonNewCase')} titleLabel={t('addCase')} ref={modalRef}>\r\n            <NewCaseForm addCase={handleCaseAdd} />\r\n          </AddUpdateModal>\r\n          <br />\r\n          <h3>{t('caseHidden')}</h3>\r\n          <hr />\r\n        </div>\r\n      )}\r\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\r\n        {admin && (\r\n          casesToShow.filter((c) => c.hidden).map((c) => (\r\n            <Col key={c.id}>\r\n              <CaseCard c={c} admin={admin} />\r\n            </Col>\r\n          ))\r\n        )}\r\n      </Row>\r\n      <br />\r\n      <h3>{t('casePlayable')}</h3>\r\n      <hr />\r\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\r\n        {casesToShow.filter((c) => !c.hidden).map((c) => (\r\n          <Col key={c.id}>\r\n            <CaseCard c={c} admin={admin} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default Frontpage;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst HowToPlay = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('howToPlay')}</h2>\r\n      <p>{t('gameInstructions')}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HowToPlay;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Profile = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('userProfile')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Users = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('userInformation')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { validateName } from '../../../utils/Helper';\r\n\r\nconst newProcedureForm = ({ addProcedure }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: validateName(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      addProcedure({\r\n        name: values.title,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('procedureTitle')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Button type=\"submit\" className=\"submitButton\">{t('buttonSubmitNewProcedure')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default newProcedureForm;\r\n","import { setError, setSuccess } from '../../../utils/MessageBanner';\r\nimport proceduresUnderCasesService from '../services/proceduresUnderCaseService';\r\n\r\nconst proceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_PROCEDURES_UNDER_CASE':\r\n      return action.data;\r\n    case 'NEW_PROCEDURE_UNDER_CASE':\r\n      return [...state, action.data];\r\n    case 'UPDATE_PROCEDURE':\r\n      return state.map((p) => (p.id !== action.data.id\r\n        ? p\r\n        : action.data));\r\n    case 'REMOVE_PROCEDURE_UNDER_CASE':\r\n      return state.filter((p) => p.id !== action.data);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProceduresUnderCase = (caseId) => async (dispatch) => {\r\n  const proceduresUnderCase = await proceduresUnderCasesService.getAll(caseId);\r\n  dispatch({\r\n    type: 'GET_PROCEDURES_UNDER_CASE',\r\n    data: proceduresUnderCase || null,\r\n  });\r\n};\r\n\r\nexport const createProcedureUnderCase = (\r\n  content, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  try {\r\n    const newProcedureUnderCase = await proceduresUnderCasesService.create(content);\r\n\r\n    dispatch({\r\n      type: 'NEW_PROCEDURE_UNDER_CASE',\r\n      data: newProcedureUnderCase,\r\n    });\r\n\r\n    setSuccess(successMessage);\r\n  } catch (error) {\r\n    setError(errorMessage);\r\n  }\r\n};\r\n\r\nexport const updateProcedurePriority = (\r\n  procedure, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  try {\r\n    await proceduresUnderCasesService.update(procedure.procedureCaseId, procedure);\r\n\r\n    dispatch({\r\n      type: 'UPDATE_PROCEDURE',\r\n      data: procedure,\r\n    });\r\n\r\n    setSuccess(successMessage);\r\n  } catch (error) {\r\n    setError(errorMessage);\r\n  }\r\n};\r\n\r\nexport const updateProcedurePriorities = (caseId, procedures) => async (dispatch) => {\r\n  await Promise.all(procedures.map((p, index) => proceduresUnderCasesService\r\n    .update(\r\n      p.procedureCaseId,\r\n      { priority: index + 1 },\r\n    )));\r\n  dispatch(getProceduresUnderCase(caseId));\r\n};\r\n\r\nexport const removeProcedureUnderCase = (\r\n  procedureId, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  try {\r\n    await proceduresUnderCasesService.remove(procedureId);\r\n\r\n    dispatch({\r\n      type: 'REMOVE_PROCEDURE_UNDER_CASE',\r\n      data: procedureId,\r\n    });\r\n\r\n    setSuccess(successMessage);\r\n  } catch (error) {\r\n    setError(errorMessage);\r\n  }\r\n};\r\n\r\nexport default proceduresReducer;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/procedures';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nexport default {\r\n  create,\r\n  getAll,\r\n  update,\r\n};\r\n","import proceduresService from '../services/proceduresService';\r\nimport { createProcedureUnderCase, updateProcedurePriority } from './proceduresUnderCasesReducer';\r\n\r\nconst proceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_PROCEDURES':\r\n      return action.data;\r\n    case 'NEW_PROCEDURE':\r\n      return [...state, action.data];\r\n    case 'UPDATE_PROCEDURE':\r\n      return state.map((p) => (p.id !== action.data.id\r\n        ? p\r\n        : {\r\n          id: p.id,\r\n          name: p.name,\r\n        }));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProcedures = () => async (dispatch) => {\r\n  const procedures = await proceduresService.getAll();\r\n  dispatch({\r\n    type: 'GET_PROCEDURES',\r\n    data: procedures || null,\r\n  });\r\n};\r\n\r\nexport const createProcedure = (\r\n  caseId, procedure, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  const newProcedure = await proceduresService.create(procedure);\r\n\r\n  dispatch({\r\n    type: 'NEW_PROCEDURE',\r\n    data: newProcedure,\r\n  });\r\n\r\n  dispatch(createProcedureUnderCase({\r\n    caseId,\r\n    procedureId: newProcedure.id,\r\n    priority: 1,\r\n  }, successMessage, errorMessage));\r\n};\r\n\r\nexport const updateProcedure = (procedure, successMessage, errorMessage) => async (dispatch) => {\r\n  await proceduresService.update(procedure.id, procedure);\r\n  dispatch(updateProcedurePriority(procedure, successMessage, errorMessage));\r\n};\r\n\r\nexport default proceduresReducer;\r\n","/* istanbul ignore file */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateProcedure } from '../reducers/proceduresReducer';\r\n\r\nconst EditProcedure = ({ procedure, caseId, editProcedureFunc }) => {\r\n  const [newPriority, setNewPriority] = useState(procedure.priority);\r\n  const [newProcedureTitle, setNewProcedureTitle] = useState(procedure.name);\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const baseUrl = `/cases/${caseId}`;\r\n\r\n  const handlePriorityChange = (event) => {\r\n    setNewPriority(event.target.value);\r\n  };\r\n\r\n  const handleTitleChange = (event) => {\r\n    setNewProcedureTitle(event.target.value);\r\n  };\r\n\r\n  const editProcedure = (event) => {\r\n    event.preventDefault();\r\n    setNewProcedureTitle(event.target[0].value);\r\n    setNewPriority(event.target[1].value);\r\n    // eslint-disable-next-line no-param-reassign\r\n\r\n    const procedureToBeUpdated = {\r\n      ...procedure,\r\n      priority: Number(event.target[1].value),\r\n      name: event.target[0].value,\r\n    };\r\n\r\n    if (editProcedureFunc != null) {\r\n      editProcedureFunc(procedureToBeUpdated);\r\n    }\r\n    dispatch(updateProcedure(procedureToBeUpdated, t('procedureUpdateSuccess'), t('procedureUpdateError')));\r\n  };\r\n\r\n  return (\r\n    <div id=\"editProcedureForm\" key={procedure.priority}>\r\n      <h2>{t('editProcedure')}</h2>\r\n      <Button className=\"procedureButton goTo\" as={Link} to={`${baseUrl}/procedure/${procedure.id}`} style={{ margin: 15 }}>{t('goToProcedure')}</Button>\r\n      <form onSubmit={(e) => editProcedure(e)}>\r\n        <p>\r\n          <label htmlFor=\"title\">\r\n            {t('procedureTitle')}\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            defaultValue={procedure.name}\r\n            onChange={handleTitleChange}\r\n            className=\"formInput\"\r\n          />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"priority\">\r\n            {t('procedurePriority')}\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"priority\"\r\n            type=\"integer\"\r\n            onChange={handlePriorityChange}\r\n            defaultValue={procedure.priority}\r\n            className=\"formInput\"\r\n          />\r\n        </p>\r\n        <p>\r\n          <Button type=\"submit\" id=\"submit\" className=\"submitButton\">{t('buttonSave')}</Button>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProcedure;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { updateProcedurePriorities, removeProcedureUnderCase } from '../reducers/proceduresUnderCasesReducer';\r\nimport EditProcedure from './EditProcedure';\r\n\r\nconst DragNDropList = ({\r\n  proceduresHook,\r\n  handleDragStart,\r\n  handleDragEnd,\r\n  handleDragEnter,\r\n  t,\r\n  submitForm,\r\n  handleProcedureRemove,\r\n}) => (\r\n  proceduresHook\r\n    && proceduresHook.map((p, index) => (\r\n      <h4\r\n        onDragStart={(e) => handleDragStart(e, index)}\r\n        onDragEnd={() => handleDragEnd()}\r\n        onDragEnter={(e) => handleDragEnter(e, index)}\r\n        key={index}\r\n        draggable\r\n      >\r\n        <div className=\"rows\">\r\n          <Button className=\"procedureButton\">\r\n            {p.priority}\r\n            &nbsp;\r\n            {p.name}\r\n          </Button>\r\n          <form onSubmit={(e) => submitForm(p, e)} className=\"handleEdits\">\r\n            <Button type=\"submit\" className=\"editButton\" key={index} size=\"sm\">{t('buttonEdit') }</Button>\r\n          </form>\r\n          <Button className=\"removeButton\" size=\"sm\" variant=\"danger\" onClick={() => handleProcedureRemove(p.id)}>{t('buttonRemove')}</Button>\r\n        </div>\r\n      </h4>\r\n    ))\r\n);\r\n\r\nconst ProcedureList = ({ id }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const draggingItem = useRef();\r\n  const dragOverItem = useRef();\r\n  const [proceduresHook, setProceduresHook] = useState([]);\r\n  const [procedureToEdit, setProcedureToEdit] = useState(null);\r\n\r\n  const initialProcedures = useSelector((state) => {\r\n    const { proceduresUnderCase } = state;\r\n    return proceduresUnderCase\r\n      .sort((a, b) => a.priority - b.priority);\r\n  });\r\n\r\n  useEffect(() => {\r\n    setProceduresHook(initialProcedures);\r\n  }, [initialProcedures]);\r\n\r\n  /* istanbul ignore next */\r\n  const handleEditId = (p) => {\r\n    setProcedureToEdit(p);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const submitForm = (p, e) => {\r\n    e.preventDefault();\r\n    handleEditId(p);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleProcedureRemove = (procedureId) => {\r\n    // eslint-disable-next-line no-alert\r\n    const confirmBox = window.confirm(t('deleteProcedureUnderCaseConfirmation'));\r\n    if (confirmBox === true) {\r\n      dispatch(removeProcedureUnderCase(procedureId, t('deleteProcedureUnderCaseSuccess'), t('deleteProcedureUnderCaseError')));\r\n    }\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDragStart = (e, position) => {\r\n    draggingItem.current = position;\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDragEnter = (e, position) => {\r\n    dragOverItem.current = position;\r\n    const listCopy = [...proceduresHook];\r\n    const draggingItemContent = listCopy[draggingItem.current];\r\n    listCopy.splice(draggingItem.current, 1);\r\n    listCopy.splice(dragOverItem.current, 0, draggingItemContent);\r\n    draggingItem.current = dragOverItem.current;\r\n    dragOverItem.current = null;\r\n    setProceduresHook(listCopy);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDragEnd = () => {\r\n    dispatch(updateProcedurePriorities(id, proceduresHook));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DragNDropList\r\n        proceduresHook={proceduresHook}\r\n        handleDragStart={handleDragStart}\r\n        handleDragEnd={handleDragEnd}\r\n        handleDragEnter={handleDragEnter}\r\n        t={t}\r\n        submitForm={submitForm}\r\n        handleProcedureRemove={handleProcedureRemove}\r\n      />\r\n      { procedureToEdit ? (\r\n        <EditProcedure procedure={procedureToEdit} caseId={id} />\r\n      ) : (\r\n        <p> </p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureList;\r\n","import React, { useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport NewProcedureForm from './NewProcedureForm';\r\nimport ProcedureList from './ProcedureList';\r\nimport AddUpdateModal from '../../../utils/AddUpdateModal';\r\nimport { createProcedure } from '../reducers/proceduresReducer';\r\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\r\n\r\nconst Procedures = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n\r\n  /* istanbul ignore next */\r\n  const handleProcedureAdd = (procedureObject) => {\r\n    modalRef.current.toggleVisibility();\r\n    try {\r\n      dispatch(createProcedure(Number(id), procedureObject));\r\n      setSuccess(t('procedureAddSuccess'));\r\n    } catch (error) {\r\n      setError(t('procedureAddError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{t('procedures')}</h2>\r\n      { admin && (\r\n        <AddUpdateModal buttonLabel={t('buttonNewProcedure')} titleLabel={t('addProcedure')} ref={modalRef}>\r\n          <NewProcedureForm addProcedure={handleProcedureAdd} />\r\n        </AddUpdateModal>\r\n      )}\r\n      <ProcedureList id={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Procedures;\r\n","import differentialsUnderCasesService from '../services/differentialsUnderCasesService';\r\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\r\n\r\nconst differentialsUnderCasesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_DIFFERENTIALSUNDERCASE':\r\n      return action.data;\r\n    case 'NEW_DIFFERENTIALUNDERCASE':\r\n      return [...state, action.data];\r\n    case 'UPDATE_DIFFERENTIALUNDERCASE':\r\n      return state.map((p) => (p.id !== action.data.id\r\n        ? p\r\n        : action.data\r\n      ));\r\n    case 'REMOVE_DIFFERENTIAL_UNDER_CASE':\r\n      return state.filter((p) => p.id !== action.data);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getDifferentialsUnderCase = (id) => async (dispatch) => {\r\n  const returnedDifferentialsUnderCase = await differentialsUnderCasesService.getAll(id);\r\n  dispatch({\r\n    type: 'GET_DIFFERENTIALSUNDERCASE',\r\n    data: returnedDifferentialsUnderCase || null,\r\n  });\r\n};\r\n\r\nexport const createDifferentialUnderCase = (\r\n  content, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  try {\r\n    const newDifferentialUnderCase = await differentialsUnderCasesService.create(content);\r\n\r\n    dispatch({\r\n      type: 'NEW_DIFFERENTIALUNDERCASE',\r\n      data: newDifferentialUnderCase,\r\n    });\r\n\r\n    setSuccess(successMessage);\r\n  } catch (error) {\r\n    setError(errorMessage);\r\n  }\r\n};\r\n\r\nexport const updateDifferentialUnderCase = (\r\n  content, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  try {\r\n    await differentialsUnderCasesService.update(content.id, content);\r\n\r\n    dispatch({\r\n      type: 'UPDATE_DIFFERENTIALUNDERCASE',\r\n      data: content,\r\n    });\r\n\r\n    setSuccess(successMessage);\r\n  } catch (error) {\r\n    setError(errorMessage);\r\n  }\r\n};\r\n\r\nexport const removeDifferentialUnderCase = (\r\n  diffGroupCaseId, differentialId, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  try {\r\n    await differentialsUnderCasesService.remove(diffGroupCaseId, differentialId);\r\n\r\n    dispatch({\r\n      type: 'REMOVE_DIFFERENTIAL_UNDER_CASE',\r\n      data: differentialId,\r\n    });\r\n\r\n    setSuccess(successMessage);\r\n  } catch (error) {\r\n    setError(errorMessage);\r\n  }\r\n};\r\n\r\nexport default differentialsUnderCasesReducer;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\n\r\nconst UpdateDifferentialForm = ({\r\n  name,\r\n  description,\r\n  updateDifferential,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name,\r\n      description,\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      description: Yup.string(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      updateDifferential({\r\n        description: values.description,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"name\">\r\n        <Form.Label>{t('title')}</Form.Label>\r\n        <Form.Control\r\n          disabled\r\n          type=\"text\"\r\n          placeholder={t('write')}\r\n          {...formik.getFieldProps('name')}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          {t('differentialNameInstruction')}\r\n        </Form.Text>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"description\">\r\n        <Form.Label>{t('description')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={10}\r\n          {...formik.getFieldProps('description')}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonUpdate')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UpdateDifferentialForm;\r\n","import React, { useRef } from 'react';\r\nimport { Accordion, Card, Button } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\nimport AddUpdateModal from '../../../utils/AddUpdateModal';\r\nimport { updateDifferentialUnderCase, removeDifferentialUnderCase } from '../reducers/differentialsUnderCasesReducer';\r\nimport UpdateDifferentialForm from './UpdateDifferentialForm';\r\n\r\nconst Differential = ({\r\n  d, admin,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialUpdate = (updatedDifferential) => {\r\n    modalRef.current.toggleVisibility();\r\n    dispatch(updateDifferentialUnderCase({\r\n      ...d,\r\n      description: updatedDifferential.description,\r\n    }, t('differentialUpdateSuccess'), t('differentialUpdateError')));\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialRemove = (diffGroupCaseId, differentialId) => {\r\n    // eslint-disable-next-line no-alert\r\n    const confirmBox = window.confirm(t('deleteDifferentialUnderCaseConfirmation'));\r\n    if (confirmBox === true) {\r\n      dispatch(\r\n        removeDifferentialUnderCase(\r\n          diffGroupCaseId,\r\n          differentialId,\r\n          t('deleteDifferentialUnderCaseSuccess'),\r\n          t('deleteDifferentialUnderCaseError'),\r\n        ),\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Accordion.Toggle as={Card.Header} eventKey={d.id} id=\"differentialName\">\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          {d.name}\r\n          {admin && (\r\n          <div className=\"rows\">\r\n            <AddUpdateModal className=\"editButton\" buttonLabel={t('buttonEdit')} titleLabel={t('updateSubProcedure')} ref={modalRef}>\r\n              <UpdateDifferentialForm\r\n                name={d.name}\r\n                description={d.description}\r\n                updateDifferential={handleDifferentialUpdate}\r\n              />\r\n            </AddUpdateModal>\r\n            <Button className=\"removeButton\" size=\"sm\" variant=\"danger\" onClick={() => handleDifferentialRemove(d.diffGroupCaseId, d.id)}>{t('buttonRemove')}</Button>\r\n          </div>\r\n          )}\r\n        </div>\r\n      </Accordion.Toggle>\r\n      <Accordion.Collapse eventKey={d.id}>\r\n        <Card.Body>{d.description}</Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Differential;\r\n","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport Differential from './Differential';\r\n\r\nconst DifferentialList = ({ diffGroupCaseId, admin }) => {\r\n  const caseDifferentials = useSelector((state) => state.differentialsUnderCase);\r\n  const diffGroupDiffs = caseDifferentials.filter((d) => d.diffGroupCaseId === diffGroupCaseId);\r\n\r\n  return (\r\n    <Accordion>\r\n      {diffGroupDiffs.map((d) => (\r\n        <Differential\r\n          key={d.id}\r\n          d={d}\r\n          admin={admin}\r\n        />\r\n      ))}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default DifferentialList;\r\n","import React from 'react';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport { useField } from 'formik';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst CustomTypeaheadSelect = (props) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [field, meta, helper] = useField(props);\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <Form.Group controlId={`form-${props.name}`}>\r\n        <Form.Label>{props.label}</Form.Label>\r\n        <Typeahead\r\n          id={props.name}\r\n          multiple={false}\r\n          onChange={(selected) => {\r\n            const value = selected.length > 0 ? selected[0].name : '';\r\n            helper.setValue(value);\r\n          }}\r\n          onInputChange={(text) => helper.setValue(text)}\r\n          onBlur={() => helper.setTouched(true)}\r\n          allowNew={false}\r\n          labelKey={props.name}\r\n          options={props.options}\r\n          placeholder={t('write')}\r\n          emptyLabel=\"\"\r\n          {...(meta.touched && meta.error\r\n            ? { isInvalid: true, className: 'is-invalid' }\r\n            : { isInvalid: false })}\r\n          {...props}\r\n        />\r\n        {meta.touched && meta.error ? (\r\n          <div className=\"invalid-feedback\">{meta.error}</div>\r\n        ) : null}\r\n      </Form.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomTypeaheadSelect;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik, FormikProvider } from 'formik';\r\nimport { useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { validateName } from '../../../utils/Helper';\r\nimport CustomTypeaheadSelect from '../../../utils/CustomTypeaheadSelect';\r\n\r\nconst AddDifferentialForm = ({ addDifferential }) => {\r\n  const { t } = useTranslation();\r\n  const differentials = useSelector((state) => state.differentials);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      description: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: validateName(),\r\n      description: Yup.string(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      const differential = differentials.filter((r) => r.name === values.name);\r\n      addDifferential(\r\n        differential.length === 0\r\n          ? { ...values }\r\n          : { ...differential[0], ...values },\r\n      );\r\n    },\r\n  });\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate onSubmit={formik.handleSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n          <CustomTypeaheadSelect\r\n            name=\"name\"\r\n            label={t('addDifferential')}\r\n            options={differentials}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>{t('description')}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            {...formik.getFieldProps('description')}\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n};\r\n\r\nexport default AddDifferentialForm;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentials';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","import differentialsService from '../services/differentialsService';\r\nimport { createDifferentialUnderCase } from './differentialsUnderCasesReducer';\r\n\r\nconst differentialsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_DIFFERENTIALS':\r\n      return action.data;\r\n    case 'NEW_DIFFERENTIAL':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getDifferentials = () => async (dispatch) => {\r\n  const returnedDifferentials = await differentialsService.getAll();\r\n  dispatch({\r\n    type: 'GET_DIFFERENTIALS',\r\n    data: returnedDifferentials || null,\r\n  });\r\n};\r\n\r\nexport const createDifferential = (\r\n  diffGroupCaseId, differential, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  let { id } = differential;\r\n\r\n  if (id === undefined) {\r\n    const newDifferential = await differentialsService.create({ name: differential.name });\r\n\r\n    dispatch({\r\n      type: 'NEW_DIFFERENTIAL',\r\n      data: newDifferential,\r\n    });\r\n\r\n    id = newDifferential.id;\r\n  }\r\n\r\n  dispatch(createDifferentialUnderCase({\r\n    diffGroupCaseId,\r\n    differentialId: id,\r\n    description: differential.description,\r\n  }, successMessage, errorMessage));\r\n};\r\n\r\nexport default differentialsReducer;\r\n","import React, { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Card } from 'react-bootstrap';\r\nimport DifferentialList from '../DifferentialList';\r\nimport AddDifferentialForm from '../AddDifferentialForm';\r\nimport AddUpdateModal from '../../../../utils/AddUpdateModal';\r\nimport { createDifferential } from '../../reducers/differentialsReducer';\r\n\r\nconst DifferentialGroup = ({\r\n  diffGroupCaseId, name, admin,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialAdd = (differentialObject) => {\r\n    modalRef.current.toggleVisibility();\r\n    dispatch(createDifferential(diffGroupCaseId, differentialObject, t('differentialAddSuccess'), t('differentialAddError')));\r\n  };\r\n\r\n  return (\r\n    <Card style={{ width: '60rem' }}>\r\n      <Card.Header>{name}</Card.Header>\r\n      <Card.Body>\r\n        <DifferentialList diffGroupCaseId={diffGroupCaseId} admin={admin} />\r\n        {admin && (\r\n          <AddUpdateModal buttonLabel={t('buttonNewDifferential')} titleLabel={t('addDifferential')} ref={modalRef}>\r\n            <AddDifferentialForm addDifferential={handleDifferentialAdd} />\r\n          </AddUpdateModal>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DifferentialGroup;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DifferentialGroup from './DifferentialGroup';\r\n\r\nconst DifferentialGroupList = ({ admin }) => {\r\n  const caseDifferentialGroups = useSelector((state) => state.differentialGroupsUnderCase);\r\n\r\n  return (\r\n    <div data-testid=\"diffGroupList\">\r\n      {caseDifferentialGroups.map((d) => (\r\n        <DifferentialGroup\r\n          key={d.id}\r\n          diffGroupCaseId={d.diffGroupCaseId}\r\n          name={d.name}\r\n          admin={admin}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DifferentialGroupList;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport { useFormik, FormikProvider } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { validateName } from '../../../../utils/Helper';\r\nimport CustomTypeaheadSelect from '../../../../utils/CustomTypeaheadSelect';\r\n\r\nconst AddDifferentialGroupForm = ({ addDifferentialGroup }) => {\r\n  const { t } = useTranslation();\r\n  const differentialGroups = useSelector((state) => state.differentialGroups);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: validateName(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      const group = differentialGroups.filter((r) => r.name === values.name);\r\n      addDifferentialGroup(\r\n        group.length === 0\r\n          ? values\r\n          : group[0],\r\n      );\r\n    },\r\n  });\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate onSubmit={formik.handleSubmit}>\r\n        <CustomTypeaheadSelect\r\n          name=\"name\"\r\n          label={t('addDifferentialGroup')}\r\n          options={differentialGroups}\r\n        />\r\n        <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n};\r\n\r\nexport default AddDifferentialGroupForm;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentialGroups';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import { setError, setSuccess } from '../../../utils/MessageBanner';\r\nimport differentialGroupsUnderCasesService from '../services/differentialGroupsUnderCasesService';\r\n\r\nconst differentialGroupsUnderCasesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_DIFFERENTIALGROUPS_UNDER_CASE':\r\n      return action.data;\r\n    case 'NEW_DIFFERENTIALGROUP_UNDER_CASE':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getDifferentialGroupsUnderCase = (id) => async (dispatch) => {\r\n  const returnedDifferentialGroupsUnderCase = await differentialGroupsUnderCasesService.getAll(id);\r\n  dispatch({\r\n    type: 'GET_DIFFERENTIALGROUPS_UNDER_CASE',\r\n    data: returnedDifferentialGroupsUnderCase || null,\r\n  });\r\n};\r\n\r\nexport const createDifferentialGroupUnderCase = (\r\n  content, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  try {\r\n    const newDifferentialGroupUnderCase = await differentialGroupsUnderCasesService.create(content);\r\n\r\n    dispatch({\r\n      type: 'NEW_DIFFERENTIALGROUP_UNDER_CASE',\r\n      data: newDifferentialGroupUnderCase,\r\n    });\r\n\r\n    setSuccess(successMessage);\r\n  } catch (error) {\r\n    setError(errorMessage);\r\n  }\r\n};\r\n\r\nexport default differentialGroupsUnderCasesReducer;\r\n","import differentialGroupsService from '../services/differentialGroupsService';\r\nimport { createDifferentialGroupUnderCase } from './differentialGroupsUnderCasesReducer';\r\n\r\nconst differentialGroupsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_DIFFERENTIALGROUPS':\r\n      return action.data;\r\n    case 'NEW_DIFFERENTIALGROUP':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getDifferentialGroups = () => async (dispatch) => {\r\n  const returnedDifferentialGroups = await differentialGroupsService.getAll();\r\n  dispatch({\r\n    type: 'GET_DIFFERENTIALGROUPS',\r\n    data: returnedDifferentialGroups || null,\r\n  });\r\n};\r\n\r\nexport const createDifferentialGroup = (\r\n  caseId, differentialGroup, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  let { id } = differentialGroup;\r\n\r\n  if (id === undefined) {\r\n    const newDifferentialGroup = await differentialGroupsService.create(differentialGroup);\r\n\r\n    dispatch({\r\n      type: 'NEW_DIFFERENTIALGROUP',\r\n      data: newDifferentialGroup,\r\n    });\r\n\r\n    id = newDifferentialGroup.id;\r\n  }\r\n\r\n  dispatch(createDifferentialGroupUnderCase({\r\n    caseId,\r\n    differentialGroupId: id,\r\n  }, successMessage, errorMessage));\r\n};\r\n\r\nexport default differentialGroupsReducer;\r\n","import React, { useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\nimport DifferentialGroupList from './differentialGroup/DifferentialGroupList';\r\nimport AddUpdateModal from '../../../utils/AddUpdateModal';\r\nimport AddDifferentialGroupForm from './differentialGroup/AddDifferentialGroupForm';\r\nimport { createDifferentialGroup } from '../reducers/differentialGroupsReducer';\r\n\r\nconst Differentials = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n  const { id } = useParams();\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialGroupAdd = (differentialGroupObject) => {\r\n    modalRef.current.toggleVisibility();\r\n    dispatch(createDifferentialGroup(Number(id), differentialGroupObject, t('differentialGroupUpdateSuccess'), t('differentialGroupUpdateError')));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        {t('Differentials')}\r\n      </h2>\r\n      {admin && (\r\n        <AddUpdateModal buttonLabel={t('buttonNewDifferentialGroup')} titleLabel={t('addDifferentialGroup')} ref={modalRef}>\r\n          <AddDifferentialGroupForm addDifferentialGroup={handleDifferentialGroupAdd} />\r\n        </AddUpdateModal>\r\n      )}\r\n      <DifferentialGroupList admin={admin} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Differentials;\r\n","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst HideCase = ({ c, hideCase }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [newHidden, setNewHidden] = useState(c.hidden);\r\n\r\n  const handleVisibilityUpdate = (event) => {\r\n    event.preventDefault();\r\n    hideCase({\r\n      ...c,\r\n      hidden: newHidden,\r\n    });\r\n  };\r\n\r\n  const handleHiddenChange = () => {\r\n    setNewHidden(!newHidden);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleVisibilityUpdate}>\r\n        <label htmlFor=\"submit\" className=\"hidden\">{newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')}</label>\r\n        <input id=\"submitHide\" className=\"hideCase\" type=\"submit\" onClick={handleHiddenChange} size=\"sm\" value={newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HideCase;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { validateName } from '../../../utils/Helper';\r\n\r\nconst UpdateCaseTitle = ({ c, updateCaseTitle }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: c.title,\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: validateName(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      updateCaseTitle({\r\n        ...c,\r\n        title: values.title,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"updateTitle\" style={{ width: '30rem' }}>\r\n        <Form.Control\r\n          className=\"titleChangeInput\"\r\n          type=\"text\"\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          {t('caseTitleInstruction')}\r\n        </Form.Text>\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UpdateCaseTitle;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst UpdateAnamnesis = ({ c, updateAnamnesis }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      anamnesis: c.anamnesis,\r\n    },\r\n    validationSchema: Yup.object({\r\n      anamnesis: Yup.string()\r\n        .min(2, t('warningShort'))\r\n        .max(5000, t('warningLong'))\r\n        .required(t('warningRequired')),\r\n    }),\r\n    onSubmit: (values) => {\r\n      updateAnamnesis({\r\n        ...c,\r\n        anamnesis: values.anamnesis,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"updateAnamnesis\">\r\n        <Form.Control\r\n          className=\"anamnesisForm\"\r\n          as=\"textarea\"\r\n          {...formik.getFieldProps('anamnesis')}\r\n          isInvalid={!!formik.errors.anamnesis}\r\n          rows={10}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.anamnesis}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSaveAnamneesi')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UpdateAnamnesis;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport HideCase from '../case/components/HideCase';\r\nimport UpdateCaseTitle from '../case/components/UpdateCaseTitle';\r\nimport UpdateAnamnesis from './UpdateAnamnesis';\r\nimport { updateCase } from '../case/casesReducer';\r\n\r\nconst Anamnesis = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const c = useSelector((state) => state.cases.find((a) => a.id === Number(id)));\r\n\r\n  /* istanbul ignore next */\r\n  const handleCaseUpdate = (updatedCase) => {\r\n    dispatch(updateCase(updatedCase, t('caseUpdateSuccess'), t('caseUpdateError')));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {admin && c && (\r\n        <div id=\"casePageArea\">\r\n          <div className=\"rows\">\r\n            <UpdateCaseTitle c={c} updateCaseTitle={handleCaseUpdate} />\r\n            <HideCase c={c} hideCase={handleCaseUpdate} />\r\n          </div>\r\n          <UpdateAnamnesis c={c} updateAnamnesis={handleCaseUpdate} />\r\n        </div>\r\n      )}\r\n      {!admin && c && (\r\n        <p>{c.title}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Anamnesis;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/subProcedures';\r\n\r\nconst getAll = (id) => {\r\n  const request = axios.get(`${baseUrl}/${id}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nexport default {\r\n  create,\r\n  getAll,\r\n  update,\r\n};\r\n","import { setError, setSuccess } from '../../../utils/MessageBanner';\r\nimport subProceduresService from '../services/subProceduresService';\r\n\r\nconst subProceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_SUBPROCEDURES':\r\n      return action.data;\r\n    case 'ADD_SUBPROCEDURE':\r\n      return [...state, action.data];\r\n    case 'UPDATE_SUBPROCEDURE': {\r\n      return state.map((p) => (p.id !== action.data.id\r\n        ? p\r\n        : action.data\r\n      ));\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getSubprocedures = (procedureCaseId) => async (dispatch) => {\r\n  const subprocedures = await subProceduresService.getAll(procedureCaseId);\r\n  dispatch({\r\n    type: 'GET_SUBPROCEDURES',\r\n    data: subprocedures || null,\r\n  });\r\n};\r\n\r\nexport const addSubprocedure = (\r\n  subProcedureObject, procedureCaseId, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  try {\r\n    const addedSubprocedure = await subProceduresService.create({\r\n      ...subProcedureObject,\r\n      procedureCaseId,\r\n    });\r\n\r\n    dispatch({\r\n      type: 'ADD_SUBPROCEDURE',\r\n      data: addedSubprocedure,\r\n    });\r\n\r\n    setSuccess(successMessage);\r\n  } catch (error) {\r\n    setError(errorMessage);\r\n  }\r\n};\r\n\r\nexport const updateSubprocedure = (\r\n  id, subProcedureObject, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  try {\r\n    await subProceduresService.update(id, subProcedureObject);\r\n\r\n    dispatch({\r\n      type: 'UPDATE_SUBPROCEDURE',\r\n      data: subProcedureObject,\r\n    });\r\n\r\n    setSuccess(successMessage);\r\n  } catch (error) {\r\n    setError(errorMessage);\r\n  }\r\n};\r\n\r\nexport default subProceduresReducer;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/optionGroups';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/optionGroupsUnderSubProcedures';\r\n\r\nconst getAll = (caseId) => {\r\n  const request = axios.get(`${baseUrl}/${caseId}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import { setError, setSuccess } from '../../../utils/MessageBanner';\r\nimport service from '../services/optionGroupsUnderSubProceduresService';\r\n\r\nconst optionGroupsUnderSubProceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_OPTIONGROUPS_UNDER_SUBPROCEDURES':\r\n      return action.data;\r\n    case 'NEW_OPTIONGROUP_UNDER_SUBPROCEDURE':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOptionGroupsUnderSubProcedures = (id) => async (dispatch) => {\r\n  const returnedOptionGroups = await service.getAll(id);\r\n  dispatch({\r\n    type: 'GET_OPTIONGROUPS_UNDER_SUBPROCEDURES',\r\n    data: returnedOptionGroups || null,\r\n  });\r\n};\r\n\r\nexport const createOptionGroupUnderSubProcedure = (\r\n  content, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  try {\r\n    const newOptionGroupUnderSubProcedure = await service.create(content);\r\n\r\n    dispatch({\r\n      type: 'NEW_OPTIONGROUP_UNDER_SUBPROCEDURE',\r\n      data: newOptionGroupUnderSubProcedure,\r\n    });\r\n\r\n    setSuccess(successMessage);\r\n  } catch (error) {\r\n    setError(errorMessage);\r\n  }\r\n};\r\n\r\nexport default optionGroupsUnderSubProceduresReducer;\r\n","import optionGroupsService from '../services/optionGroupsService';\r\nimport { createOptionGroupUnderSubProcedure } from './optionGroupsUnderSubProceduresReducer';\r\n\r\nconst optionGroupsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_OPTIONGROUPS':\r\n      return action.data;\r\n    case 'NEW_OPTIONGROUP':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOptionGroups = () => async (dispatch) => {\r\n  const returnedOptionGroups = await optionGroupsService.getAll();\r\n\r\n  dispatch({\r\n    type: 'GET_OPTIONGROUPS',\r\n    data: returnedOptionGroups || null,\r\n  });\r\n};\r\n\r\nexport const createOptionGroup = (\r\n  subProcedureId, optionGroup, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  let { id } = optionGroup;\r\n\r\n  if (id === undefined) {\r\n    const newOptionGroup = await optionGroupsService.create(optionGroup);\r\n\r\n    dispatch({\r\n      type: 'NEW_OPTIONGROUP',\r\n      data: newOptionGroup,\r\n    });\r\n\r\n    id = newOptionGroup.id;\r\n  }\r\n\r\n  dispatch(createOptionGroupUnderSubProcedure({\r\n    subProcedureId,\r\n    optionGroupId: id,\r\n  }, successMessage, errorMessage));\r\n};\r\n\r\nexport default optionGroupsReducer;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/options';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/optionsUnderSubProcedures';\r\n\r\nconst getAll = (id) => {\r\n  const request = axios.get(`${baseUrl}/${id}/INTERVIEW/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import { setError, setSuccess } from '../../../utils/MessageBanner';\r\nimport service from '../services/optionsUnderSubProceduresService';\r\n\r\nconst optionsUnderSubProceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_OPTIONS_UNDER_SUBPROCEDURES':\r\n      return action.data;\r\n    case 'NEW_OPTION_UNDER_SUBPROCEDURE':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOptionsUnderSubProcedures = (id) => async (dispatch) => {\r\n  const returnedOptions = await service.getAll(id);\r\n  dispatch({\r\n    type: 'GET_OPTIONS_UNDER_SUBPROCEDURES',\r\n    data: returnedOptions || null,\r\n  });\r\n};\r\n\r\nexport const createOptionUnderSubProcedure = (\r\n  content, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  try {\r\n    const newOption = await service.create(content);\r\n\r\n    dispatch({\r\n      type: 'NEW_OPTION_UNDER_SUBPROCEDURE',\r\n      data: newOption,\r\n    });\r\n\r\n    setSuccess(successMessage);\r\n  } catch (error) {\r\n    setError(errorMessage);\r\n  }\r\n};\r\n\r\nexport default optionsUnderSubProceduresReducer;\r\n","import service from '../services/optionsService';\r\nimport { createOptionUnderSubProcedure } from './optionsUnderSubProceduresReducer';\r\n\r\nconst optionsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_OPTIONS':\r\n      return action.data;\r\n    case 'NEW_OPTION':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOptions = () => async (dispatch) => {\r\n  const returnedOptions = await service.getAll();\r\n  dispatch({\r\n    type: 'GET_OPTIONS',\r\n    data: returnedOptions || null,\r\n  });\r\n};\r\n\r\nexport const createOption = (\r\n  optionGroupSubProcedureId, content, successMessage, errorMessage,\r\n) => async (dispatch) => {\r\n  let { id } = content;\r\n\r\n  if (id === undefined) {\r\n    const newOption = await service.create({ name: content.name });\r\n\r\n    dispatch({\r\n      type: 'NEW_OPTION',\r\n      data: newOption,\r\n    });\r\n\r\n    id = newOption.id;\r\n  }\r\n\r\n  dispatch(createOptionUnderSubProcedure({\r\n    optionGroupSubProcedureId,\r\n    optionId: id,\r\n    description: content.description,\r\n    isRequired: content.isRequired,\r\n  }, successMessage, errorMessage));\r\n};\r\n\r\nexport default optionsReducer;\r\n","import React, { useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Link, useParams, Switch, Route, Redirect,\r\n} from 'react-router-dom';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport Procedures from '../../procedure/components/Procedures';\r\nimport Differentials from '../../differential/components/Differentials';\r\nimport Anamnesis from '../../anamnesis/Anamnesis';\r\nimport { getProcedures } from '../../procedure/reducers/proceduresReducer';\r\nimport { getProceduresUnderCase } from '../../procedure/reducers/proceduresUnderCasesReducer';\r\nimport { getDifferentials } from '../../differential/reducers/differentialsReducer';\r\nimport { getDifferentialGroups } from '../../differential/reducers/differentialGroupsReducer';\r\nimport { getDifferentialGroupsUnderCase } from '../../differential/reducers/differentialGroupsUnderCasesReducer';\r\nimport { getDifferentialsUnderCase } from '../../differential/reducers/differentialsUnderCasesReducer';\r\nimport { getSubprocedures } from '../../subprocedure/reducers/subProceduresReducer';\r\nimport { getOptionGroups } from '../../subprocedure/reducers/optionGroupsReducer';\r\nimport { getOptionGroupsUnderSubProcedures } from '../../subprocedure/reducers/optionGroupsUnderSubProceduresReducer';\r\nimport { getOptions } from '../../subprocedure/reducers/optionReducer';\r\nimport { getOptionsUnderSubProcedures } from '../../subprocedure/reducers/optionsUnderSubProceduresReducer';\r\n\r\nconst Case = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const baseUrl = `/cases/${id}`;\r\n\r\n  useEffect(() => {\r\n    dispatch(getProcedures());\r\n    dispatch(getProceduresUnderCase(id));\r\n    dispatch(getSubprocedures(id));\r\n    dispatch(getOptionGroups());\r\n    dispatch(getOptionGroupsUnderSubProcedures(id));\r\n    dispatch(getOptions());\r\n    dispatch(getOptionsUnderSubProcedures(id));\r\n    dispatch(getDifferentials());\r\n    dispatch(getDifferentialsUnderCase(id));\r\n    dispatch(getDifferentialGroups());\r\n    dispatch(getDifferentialGroupsUnderCase(id));\r\n  }, []);\r\n\r\n  const buttonGroupStyle = {\r\n    marginBottom: 25,\r\n  };\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <ButtonGroup style={buttonGroupStyle}>\r\n        <Button className=\"tabs\" as={Link} to={`${baseUrl}/anamnesis`} disabled>{t('caseAnamnesis')}</Button>\r\n        <Button className=\"tabs\" as={Link} to={`${baseUrl}/procedures`}>{t('caseProcedures')}</Button>\r\n        <Button className=\"tabs\" as={Link} to={`${baseUrl}/differentials`}>{t('caseDifferentials')}</Button>\r\n      </ButtonGroup>\r\n\r\n      <Switch>\r\n        <Route path=\"/cases/:id/anamnesis\">\r\n          <Anamnesis admin={admin} />\r\n        </Route>\r\n        <Route path=\"/cases/:id/procedures\">\r\n          <Procedures admin={admin} />\r\n        </Route>\r\n        <Route path=\"/cases/:id/differentials\">\r\n          <Differentials admin={admin} />\r\n        </Route>\r\n        <Route path=\"/cases/:id\">\r\n          <Redirect to={`${baseUrl}/anamnesis`} />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Case;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { useFormik, FormikProvider } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTypeaheadSelect from '../../../../../utils/CustomTypeaheadSelect';\r\nimport { validateName } from '../../../../../utils/Helper';\r\n\r\nconst NewOptionGroupForm = ({ addOptionGroup }) => {\r\n  const { t } = useTranslation();\r\n  const optionGroups = useSelector((state) => state.optionGroups);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      name: validateName(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      const group = optionGroups.filter((r) => r.name === values.name);\r\n      addOptionGroup(\r\n        group.length === 0\r\n          ? values\r\n          : group[0],\r\n      );\r\n    },\r\n  });\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate onSubmit={formik.handleSubmit}>\r\n        <CustomTypeaheadSelect\r\n          name=\"name\"\r\n          label={t('addOptionGroup')}\r\n          options={optionGroups}\r\n        />\r\n        <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n};\r\n\r\nexport default NewOptionGroupForm;\r\n","import React from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\n\r\nconst Option = ({ optionObject }) => (\r\n  <Card>\r\n    <Accordion.Toggle\r\n      className={`optionCard-${optionObject.isRequired}`}\r\n      as={Card.Header}\r\n      eventKey={optionObject.id}\r\n    >\r\n      {optionObject.name}\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={optionObject.id}>\r\n      <Card.Body>{optionObject.description}</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n);\r\n\r\nexport default Option;\r\n","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport Option from './Option';\r\n\r\nconst OptionList = ({ optionGroupSubProcedureId }) => {\r\n  const caseOptions = useSelector((state) => state.optionsUnderSubProcedure);\r\n  const options = caseOptions.filter(\r\n    (o) => o.optionGroupSubProcedureId === optionGroupSubProcedureId,\r\n  );\r\n\r\n  return (\r\n    <Accordion>\r\n      {options.map((o) => (\r\n        <Option key={o.id} optionObject={o} />\r\n      ))}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default OptionList;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { useFormik, FormikProvider } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport CustomTypeaheadSelect from '../../../../utils/CustomTypeaheadSelect';\r\nimport { validateName } from '../../../../utils/Helper';\r\n\r\nconst AddOptionForm = ({ addOption }) => {\r\n  const { t } = useTranslation();\r\n  const options = useSelector((state) => state.options);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      description: '',\r\n      isRequired: 2,\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      name: validateName(),\r\n      description: Yup.string(),\r\n      isRequired: Yup.number()\r\n        .required(t('warningRequired'))\r\n        .integer(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      const option = options.filter((r) => r.name === values.name);\r\n      addOption(\r\n        option.length === 0\r\n          ? { ...values, isRequired: Number(values.isRequired) }\r\n          : { ...option[0], ...values, isRequired: Number(values.isRequired) },\r\n      );\r\n    },\r\n  });\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate onSubmit={formik.handleSubmit}>\r\n        <CustomTypeaheadSelect\r\n          name=\"name\"\r\n          label={t('addOption')}\r\n          options={options}\r\n        />\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>{t('description')}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            {...formik.getFieldProps('description')}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"isRequired\">\r\n          <Form.Check\r\n            defaultChecked\r\n            id=\"required\"\r\n            label={t('required')}\r\n            name=\"isRequired\"\r\n            type=\"radio\"\r\n            value={2}\r\n            onChange={formik.getFieldProps('isRequired').onChange}\r\n          />\r\n          <Form.Check\r\n            id=\"voluntary\"\r\n            label={t('voluntary')}\r\n            name=\"isRequired\"\r\n            type=\"radio\"\r\n            value={1}\r\n            onChange={formik.getFieldProps('isRequired').onChange}\r\n          />\r\n          <Form.Check\r\n            id=\"wrong\"\r\n            label={t('wrong')}\r\n            name=\"isRequired\"\r\n            type=\"radio\"\r\n            value={0}\r\n            onChange={formik.getFieldProps('isRequired').onChange}\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n};\r\n\r\nexport default AddOptionForm;\r\n","import React, { useRef } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\nimport OptionList from '../OptionList';\r\nimport AddOptionForm from '../AddOptionForm';\r\nimport AddUpdateModal from '../../../../../utils/AddUpdateModal';\r\nimport { createOption } from '../../../reducers/optionReducer';\r\n\r\nconst OptionGroup = ({\r\n  optionGroupSubProcedureId, name, admin,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n\r\n  /* istanbul ignore next */\r\n  const handleOptionAdd = (newOption) => {\r\n    modalRef.current.toggleVisibility();\r\n    dispatch(createOption(optionGroupSubProcedureId, newOption, t('optionAddSuccess'), t('optionAddError')));\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>{name}</Card.Header>\r\n      <Card.Body>\r\n        <OptionList optionGroupSubProcedureId={optionGroupSubProcedureId} />\r\n        {admin && (\r\n        <AddUpdateModal buttonLabel={t('buttonAddNewOption')} titleLabel={t('addOption')} ref={modalRef}>\r\n          <AddOptionForm addOption={handleOptionAdd} />\r\n        </AddUpdateModal>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default OptionGroup;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport OptionGroup from './OptionGroup';\r\n\r\nconst OptionGroupList = ({ subProcedureId, admin }) => {\r\n  const caseOptionGroups = useSelector((state) => state.optionGroupsUnderSubProcedure);\r\n  const subProcedureOptionGroups = caseOptionGroups.filter(\r\n    (o) => o.subProcedureId === subProcedureId,\r\n  );\r\n\r\n  return (\r\n    <div data-testid=\"optionGroupList\">\r\n      {subProcedureOptionGroups.map((d) => (\r\n        <OptionGroup\r\n          key={d.id}\r\n          optionGroupSubProcedureId={d.optionGroupSubProcedureId}\r\n          name={d.name}\r\n          admin={admin}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionGroupList;\r\n","import React, { useRef } from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\nimport AddUpdateModal from '../../../../utils/AddUpdateModal';\r\nimport AddOptionGroupForm from '../option/optionGroup/AddOptionGroupForm';\r\nimport { createOptionGroup } from '../../reducers/optionGroupsReducer';\r\nimport OptionGroupList from '../option/optionGroup/OptionGroupList';\r\n\r\nconst InterviewSubProcedure = ({ d, admin }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n\r\n  /* istanbul ignore next */\r\n  const handleOptionGroupAdd = (optionGroup) => {\r\n    modalRef.current.toggleVisibility();\r\n    dispatch(createOptionGroup(d.id, optionGroup, t('optionGroupAddSuccess'), t('optionGroupAddError')));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{ width: '60rem' }}>\r\n        <Accordion.Toggle as={Card.Header} eventKey={d.id}>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            {d.title}\r\n          </div>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey={d.id}>\r\n          <Card.Body>\r\n            { admin\r\n            && (\r\n            <AddUpdateModal buttonLabel={t('buttonAddNewOptionGroup')} titleLabel={t('addOptionGroup')} ref={modalRef}>\r\n              <AddOptionGroupForm addOptionGroup={handleOptionGroupAdd} />\r\n            </AddUpdateModal>\r\n            )}\r\n            <OptionGroupList subProcedureId={d.id} admin={admin} />\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterviewSubProcedure;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { validateName } from '../../../../utils/Helper';\r\n\r\nconst UpdateTextSubProcedureForm = ({\r\n  title,\r\n  text,\r\n  updateTextSubProcedure,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title,\r\n      text,\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      title: validateName(),\r\n      text: Yup.string(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      updateTextSubProcedure({\r\n        text: values.text,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('title')}</Form.Label>\r\n        <Form.Control\r\n          disabled\r\n          type=\"text\"\r\n          placeholder={t('write')}\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"text\">\r\n        <Form.Label>{t('textToAdd')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={10}\r\n          {...formik.getFieldProps('text')}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonUpdate')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UpdateTextSubProcedureForm;\r\n","import React, { useRef } from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\nimport UpdateTextSubProcedureForm from './UpdateTextSubProcedureForm';\r\nimport { updateSubprocedure } from '../../reducers/subProceduresReducer';\r\nimport { setSuccess, setError } from '../../../../utils/MessageBanner';\r\nimport AddUpdateModal from '../../../../utils/AddUpdateModal';\r\n\r\nconst TextSubProcedure = ({ d, admin }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n\r\n  /* istanbul ignore next */\r\n  const handleTextSubProcedureUpdate = (updatedObject) => {\r\n    modalRef.current.toggleVisibility();\r\n    try {\r\n      dispatch(updateSubprocedure(d.id, {\r\n        ...d,\r\n        text: updatedObject.text,\r\n      }));\r\n      setSuccess(t('subProcedureUpdateSuccess'));\r\n    } catch (error) {\r\n      setError(t('subProcedureUpdateError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{ width: '60rem' }}>\r\n        <Accordion.Toggle as={Card.Header} eventKey={d.id}>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            {d.title}\r\n            {admin && (\r\n            <div className=\"cardButtons\">\r\n              <AddUpdateModal className=\"editButton\" buttonLabel={t('buttonEdit')} titleLabel={t('updateSubProcedure')} ref={modalRef}>\r\n                <UpdateTextSubProcedureForm\r\n                  title={d.title}\r\n                  text={d.text}\r\n                  updateTextSubProcedure={handleTextSubProcedureUpdate}\r\n                />\r\n              </AddUpdateModal>\r\n            </div>\r\n            )}\r\n          </div>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey={d.id}>\r\n          <Card.Body>{d.text}</Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextSubProcedure;\r\n","import React from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\n\r\nconst ConclusionSubProcedure = ({ d }) => (\r\n  <div>\r\n    <Card style={{ width: '60rem' }}>\r\n      <Accordion.Toggle as={Card.Header} eventKey={d.id}>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          {d.title}\r\n        </div>\r\n      </Accordion.Toggle>\r\n      <Accordion.Collapse eventKey={d.id}>\r\n        <Card.Body>{d.text}</Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  </div>\r\n);\r\n\r\nexport default ConclusionSubProcedure;\r\n","import React from 'react';\r\nimport InterviewSubProcedure from './interviewSubProcedure/InterviewSubProcedure';\r\nimport TextSubProcedure from './textSubProcedure/TextSubProcedure';\r\nimport ConclusionSubProcedure from './conclusionSubProcedure/ConclusionSubProcedure';\r\n\r\n// eslint-disable-next-line consistent-return\r\nconst SubProcedure = ({ d, admin }) => {\r\n  if (d.type === 'TEXT') {\r\n    return (\r\n      <TextSubProcedure\r\n        d={d}\r\n        admin={admin}\r\n      />\r\n    );\r\n  } if (d.type === 'INTERVIEW') {\r\n    return (\r\n      <InterviewSubProcedure\r\n        d={d}\r\n        admin={admin}\r\n      />\r\n    );\r\n  } if (d.type === 'CONCLUSION') {\r\n    return (\r\n      <ConclusionSubProcedure\r\n        d={d}\r\n        admin={admin}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default SubProcedure;\r\n","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport SubProcedure from './SubProcedure';\r\n\r\nconst SubProcedureList = ({ listedProcedures, admin }) => (\r\n  <Accordion>\r\n    {listedProcedures.map((d) => (\r\n      <SubProcedure key={d.id} d={d} admin={admin} />\r\n    ))}\r\n  </Accordion>\r\n);\r\n\r\nexport default SubProcedureList;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { validateName, validatePriority } from '../../../../utils/Helper';\r\n\r\nconst AddTextSubProcedure = ({ addSubProcedure }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      priority: '',\r\n      title: '',\r\n      text: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: validateName(),\r\n      priority: validatePriority(),\r\n      text: Yup.string(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      addSubProcedure({\r\n        ...values,\r\n        priority: Number(values.priority),\r\n        type: 'TEXT',\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('title')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('write')}\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"priority\">\r\n        <Form.Label>{t('subProcedurePriority')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('giveNumber')}\r\n          {...formik.getFieldProps('priority')}\r\n          isInvalid={!!formik.errors.priority}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.priority}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"text\">\r\n        <Form.Label>{t('textToAdd')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={10}\r\n          {...formik.getFieldProps('text')}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmit')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddTextSubProcedure;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { validateName, validatePriority } from '../../../../utils/Helper';\r\n\r\nconst AddInterviewSubProcedure = ({ addSubProcedure }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      priority: '',\r\n      title: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: validateName(),\r\n      priority: validatePriority(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      addSubProcedure({\r\n        priority: Number(values.priority),\r\n        type: 'INTERVIEW',\r\n        title: values.title,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('title')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('write')}\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"priority\">\r\n        <Form.Label>{t('subProcedurePriority')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('giveNumber')}\r\n          {...formik.getFieldProps('priority')}\r\n          isInvalid={!!formik.errors.priority}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.priority}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmit')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddInterviewSubProcedure;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { validateName, validatePriority } from '../../../../utils/Helper';\r\n\r\nconst AddConclusionSubProcedureForm = ({ addSubProcedure }) => {\r\n  const { t } = useTranslation();\r\n  const caseDifferentials = useSelector((state) => state.differentialsUnderCase);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      priority: '',\r\n      title: '',\r\n      text: '',\r\n      differentialId: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: validateName(),\r\n      priority: validatePriority(),\r\n      text: Yup.string(),\r\n      differentialId: Yup.string()\r\n        .required(t('warningRequired')),\r\n    }),\r\n    onSubmit: (values) => {\r\n      addSubProcedure({\r\n        ...values,\r\n        differentialId: Number(values.differentialId),\r\n        priority: Number(values.priority),\r\n        type: 'CONCLUSION',\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('title')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('write')}\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"priority\">\r\n        <Form.Label>{t('subProcedurePriority')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('giveNumber')}\r\n          {...formik.getFieldProps('priority')}\r\n          isInvalid={!!formik.errors.priority}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.priority}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"differentialId\">\r\n        <Form.Label>{t('subProcedureDifferential')}</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          {...formik.getFieldProps('differentialId')}\r\n          isInvalid={!!formik.errors.differentialId}\r\n        >\r\n          <option key=\"blankChoice\" hidden value>{t('selectDifferential')}</option>\r\n          {caseDifferentials.map((d) => (\r\n            <option key={d.id} value={d.id}>{d.name}</option>\r\n          ))}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.differentialId}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"text\">\r\n        <Form.Label>{t('textToAdd')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={10}\r\n          {...formik.getFieldProps('text')}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmit')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddConclusionSubProcedureForm;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  useParams,\r\n} from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport AddUpdateModal from '../../../utils/AddUpdateModal';\r\nimport SubProcedureList from '../../subprocedure/components/SubProcedureList';\r\nimport AddTextSubProcedure from '../../subprocedure/components/textSubProcedure/AddTextSubProcedure';\r\nimport { addSubprocedure } from '../../subprocedure/reducers/subProceduresReducer';\r\nimport AddInterviewSubProcedure from '../../subprocedure/components/interviewSubProcedure/AddInterviewSubProcedure';\r\nimport AddConclusionSubProcedureForm from '../../subprocedure/components/conclusionSubProcedure/AddConclusionSubProcedureForm';\r\n\r\nconst Procedure = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const modalRef = useRef();\r\n\r\n  const caseSubProcedures = useSelector((state) => state.subProcedures);\r\n  const listedProcedures = caseSubProcedures\r\n    .filter((p) => p.procedureCaseId === Number(id))\r\n    .sort((a, b) => a.priority - b.priority);\r\n\r\n  const showWhenVisible = { display: show ? '' : 'none' };\r\n\r\n  const handleVisibility = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  /* istanbull ignore next */\r\n  const handleSubProcedureAdd = (newSubProcedure) => {\r\n    modalRef.current.toggleVisibility();\r\n    dispatch(addSubprocedure(newSubProcedure, Number(id), t('subProcedureAddSuccess'), t('subProcedureAddError')));\r\n  };\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>\r\n        {t('subProcedures')}\r\n      </h2>\r\n      {admin && (\r\n        <div>\r\n          <Button className=\"addButton\" onClick={handleVisibility} id=\"addNew\">\r\n            {t('buttonNewSubProcedure')}\r\n          </Button>\r\n          <div className=\"rows\" style={showWhenVisible}>\r\n            <AddUpdateModal buttonLabel={t('buttonAddNewText')} titleLabel={t('addTextSubProcedure')} ref={modalRef}>\r\n              <AddTextSubProcedure addSubProcedure={handleSubProcedureAdd} />\r\n            </AddUpdateModal>\r\n            <Button className=\"addButton question\" size=\"sm\">{t('buttonAddNewQuestion')}</Button>\r\n            <AddUpdateModal buttonLabel={t('buttonAddNewInterview')} titleLabel={t('addInterviewSubProcedure')} ref={modalRef}>\r\n              <AddInterviewSubProcedure addSubProcedure={handleSubProcedureAdd} />\r\n            </AddUpdateModal>\r\n            <AddUpdateModal disabled={caseSubProcedures.some((p) => p.type === 'CONCLUSION')} buttonLabel={t('buttonAddFinalDiagnosis')} titleLabel={t('addConclusionSubProcedure')} ref={modalRef}>\r\n              <AddConclusionSubProcedureForm addSubProcedure={handleSubProcedureAdd} />\r\n            </AddUpdateModal>\r\n          </div>\r\n          <SubProcedureList listedProcedures={listedProcedures} admin={admin} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Procedure;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst FileBank = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('fileBank')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileBank;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../utils/Helper';\r\n\r\nconst baseUrl = '/api/files';\r\n\r\nconst getPrivacyNotice = () => {\r\n  const config = getConfig();\r\n  config.responseType = 'arraybuffer';\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, config);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getPrivacyNotice,\r\n};\r\n","/* eslint-disable import/no-unresolved */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport { useTranslation } from 'react-i18next';\r\nimport filesService from './filesService';\r\n\r\nconst PrivacyNotice = () => {\r\n  const { t } = useTranslation();\r\n  const [pdf, setPdf] = useState(null);\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  useEffect(async () => {\r\n    const fetchedPdf = await filesService.getPrivacyNotice();\r\n    setPdf({\r\n      data: fetchedPdf,\r\n    });\r\n  }, []);\r\n\r\n  // eslint-disable-next-line no-shadow\r\n  const onDocumentLoadSuccess = ({ numPages }) => {\r\n    setNumPages(numPages);\r\n    setPageNumber(1);\r\n  };\r\n\r\n  const changePage = (offset) => {\r\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\r\n  };\r\n\r\n  const previousPage = () => {\r\n    changePage(-1);\r\n  };\r\n\r\n  const nextPage = () => {\r\n    changePage(1);\r\n  };\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <div>\r\n        <p>\r\n          {t('page')}\r\n          &nbsp;\r\n          {pageNumber || (numPages ? 1 : '--')}\r\n          {t('of')}\r\n          {numPages || '--'}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          disabled={pageNumber <= 1}\r\n          onClick={previousPage}\r\n        >\r\n          {t('previous')}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          disabled={pageNumber >= numPages}\r\n          onClick={nextPage}\r\n        >\r\n          {t('next')}\r\n        </button>\r\n      </div>\r\n      <Document\r\n        file={pdf}\r\n        onLoadSuccess={onDocumentLoadSuccess}\r\n      >\r\n        <Page pageNumber={pageNumber} />\r\n      </Document>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivacyNotice;\r\n","import React from 'react';\r\nimport {\r\n  Switch, Route, Redirect,\r\n} from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Frontpage from '../frontpage/Frontpage';\r\nimport HowToPlay from '../instructions/HowToPlay';\r\nimport Profile from '../users/Profile';\r\nimport Users from '../users/Users';\r\nimport Case from '../case/components/Case';\r\nimport Procedure from '../procedure/components/Procedure';\r\nimport FileBank from '../files/FileBank';\r\nimport PrivacyNotice from '../files/PrivacyNotice';\r\n\r\nconst Routing = () => {\r\n  const admin = useSelector((state) => state.admin);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/howtoplay\">\r\n        <HowToPlay />\r\n      </Route>\r\n      <Route path=\"/profile\">\r\n        <Profile />\r\n      </Route>\r\n      <Route path=\"/users\">\r\n        {admin ? <Users /> : <Redirect to=\"/\" />}\r\n      </Route>\r\n      <Route path=\"/cases/:id/procedure/:id\">\r\n        <Procedure admin={admin} />\r\n      </Route>\r\n      <Route path=\"/cases/:id\">\r\n        <Case admin={admin} />\r\n      </Route>\r\n      <Route path=\"/files\">\r\n        {admin ? <FileBank /> : <Redirect to=\"/\" />}\r\n      </Route>\r\n      <Route path=\"/privacy\">\r\n        <PrivacyNotice />\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <Frontpage admin={admin} />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routing;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Footer = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <hr />\r\n      <Link to=\"/privacy\" style={{ color: 'black' }}>{t('privacyNotice')}</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { initializeCasesAndUser } from './App/case/casesReducer';\r\nimport Navigationbar from './App/navigation/Navbar';\r\nimport Sidebar from './App/navigation/Sidebar';\r\nimport Routing from './App/navigation/Routing';\r\nimport MessageBanner from './utils/MessageBanner';\r\nimport Footer from './App/navigation/Footer';\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  /* istanbul ignore next */\r\n  React.useEffect(() => {\r\n    dispatch(initializeCasesAndUser());\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Navigationbar />\r\n      <Sidebar />\r\n      <MessageBanner />\r\n      <Routing />\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default (App);\r\n","const userReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case 'INITIALIZE_USER':\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport casesReducer from './App/case/casesReducer';\r\nimport userReducer from './App/users/reducers/userReducer';\r\nimport proceduresReducer from './App/procedure/reducers/proceduresReducer';\r\nimport proceduresUnderCasesReducer from './App/procedure/reducers/proceduresUnderCasesReducer';\r\nimport subProceduresReducer from './App/subprocedure/reducers/subProceduresReducer';\r\nimport differentialsReducer from './App/differential/reducers/differentialsReducer';\r\nimport differentialsUnderCasesReducer from './App/differential/reducers/differentialsUnderCasesReducer';\r\nimport differentialGroupsReducer from './App/differential/reducers/differentialGroupsReducer';\r\nimport differentialGroupsUnderCasesReducer from './App/differential/reducers/differentialGroupsUnderCasesReducer';\r\nimport optionGroupsReducer from './App/subprocedure/reducers/optionGroupsReducer';\r\nimport optionGroupsUnderSubProceduresReducer from './App/subprocedure/reducers/optionGroupsUnderSubProceduresReducer';\r\nimport optionsReducer from './App/subprocedure/reducers/optionReducer';\r\nimport optionsUnderSubProceduresReducer from './App/subprocedure/reducers/optionsUnderSubProceduresReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  cases: casesReducer,\r\n  admin: userReducer,\r\n  procedures: proceduresReducer,\r\n  proceduresUnderCase: proceduresUnderCasesReducer,\r\n  subProcedures: subProceduresReducer,\r\n  optionGroups: optionGroupsReducer,\r\n  optionGroupsUnderSubProcedure: optionGroupsUnderSubProceduresReducer,\r\n  options: optionsReducer,\r\n  optionsUnderSubProcedure: optionsUnderSubProceduresReducer,\r\n  differentials: differentialsReducer,\r\n  differentialsUnderCase: differentialsUnderCasesReducer,\r\n  differentialGroups: differentialGroupsReducer,\r\n  differentialGroupsUnderCase: differentialGroupsUnderCasesReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nexport default () => {\r\n  const store = createStore(\r\n    persistedReducer,\r\n    composeWithDevTools(\r\n      applyMiddleware(thunk),\r\n    ),\r\n  );\r\n  const persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' // [::1] is the IPv6 localhost address.\r\n      || window.location.hostname === '[::1]'\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      || window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n      ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        // eslint-disable-next-line no-use-before-define\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        // eslint-disable-next-line no-use-before-define\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n\r\n              // Execute callback\r\n              // eslint-disable-next-line no-lonely-if\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n          || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      });\r\n  }\r\n}\r\n","/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from './App';\r\nimport createStore from './store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './i18n/config';\r\n\r\nconst { store, persistor } = createStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}